defaultTasks 'cleanup', 'build'
apply plugin: 'java'

configurations {
    generatesrc
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    base         = '.'
    src          = new File(base, 'src')
    workspace    = new File(base, 'build')
    dist         = new File(base, 'dist')
    generatedsrc = new File(workspace, '/generatedsrc')
    workingdirs  = [workspace, generatedsrc, dist]
}

dependencies {
    generatesrc 'de.jflex:maven-jflex-plugin:1.4.3'
    compile 'org.apache.lucene:lucene-core:3.0.2'
    compile 'org.apache.lucene:lucene-spellchecker:3.0.2'
    compile 'org.apache.bcel:bcel:5.2'
    compile 'org.apache.ant:ant:1.8.1'
    compile 'javax.servlet:servlet-api:2.5'
    testCompile 'junit:junit:4.8.2'
}

task cleanup << {
    delete project.ext.workingdirs
}

task prepare << {
    project.ext.workingdirs.each { File d ->
        d.mkdirs()
    }
}

task jflex(dependsOn: prepare) << {
    ant.taskdef(name: 'jflex', classname: 'JFlex.anttask.JFlexTask', classpath: configurations.generatesrc.asPath)

    fileTree(dir: project.ext.src).include('**/*.lex').each { File f ->
        ant.jflex(destdir: project.ext.generatedsrc, file: f)
    }
}

task testData(dependsOn: prepare) {
    String source_zip_dir = 'build/classes/test/org/opensolaris/opengrok/index/'
    new File(source_zip_dir).mkdirs()
    ant.zip(destfile: source_zip_dir + 'source.zip') {
        fileset(dir: project.ext.base + '/test/data/sources') {
        }
    }
}

compileJava {
    dependsOn jflex
}

test {
    dependsOn testData
}

sourceSets {
    main {
        java {
            srcDir project.ext.src
            srcDir project.ext.generatedsrc
        }
    }
    test {
        java {
            srcDir project.base + '/test/java'
        }
        resources {
            srcDir project.ext.src
            srcDir project.base + '/test/java'
            srcDir project.base + '/test/data'
        }
    }
}

jar {
    manifest {
        attributes('Main-Class': 'org.opensolaris.opengrok.index.Indexer')
    }
}

